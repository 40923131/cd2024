<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>網際內容管理系統</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2024-04-19T08:25:46+08:00</updated><entry><title>第七週日誌</title><link href="./2024-Spring-w9-blog-tutorial.html" rel="alternate"></link><published>2024-04-19T00:00:00+08:00</published><updated>2024-04-19T08:25:46+08:00</updated><author><name>40923131</name></author><id>tag:None,2024-04-19:./2024-Spring-w9-blog-tutorial.html</id><summary type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;


&lt;h1&gt;W9&lt;/h1&gt;
&lt;p&gt;使用課程提供的goodle AI studio翻譯論文中的內容&lt;/p&gt;
&lt;p&gt;我分配到的內容是41~50頁，以下是我對AI的提問及AI對我的回答及重點整理&lt;/p&gt;
&lt;p&gt;閱讀以上文章並幫我完整翻譯41頁到50頁的內容及整理出文章重點&lt;/p&gt;
&lt;p&gt;第 41~50 頁完整翻譯與重點整理：
5.4. Development（開發階段）
現在公司的基本結構已經在軟體中建立，可以開始模擬過程了。首先，重點關注 Odoo 中新產品的開發方面（圖 9），特別是，由於這是公司創建的第一個產品，因此評估 Odoo 在組織原型設計過程中的可能用途。這包括從構思到設計和原型生產的路徑。然後，一旦產品作為原型達到可接受的結果，將進行與生產過程開發相關的工作。一旦完成正式的生產運行，產品開發即被視為成功。
5.4.1. Idea - design - product prototype（構思 - 設計 - 產品原型）
如第 4 章所述，產品的構思已經建立，並且已經進行了初步設計特徵和基本產品研究。這代表了 Odoo 軟體在現實世界中的實際實現，因為儘管 Odoo 擁有良好的項目管理和溝通應用程序，但這些應用程序與庫存和製造應用程序是外部的，更重要的是，與工程設計 CAD 軟件沒有任何集成。在此模擬中，該想法已被付諸紙面，並使用 Solidworks 軟體轉換為 CAD 設計，從而在工程師計算機中本地生成 CAD 文件。
圖 36 關於產品開發的分段圖
在這個時候，可以正式使用 Odoo 軟體了。第一步是了解就產品項目而言生產的主題是什麼。有兩種方法可以做到這一點：
第一種是將原型視為最終產品的早期版本，即在 Odoo 中創建的原型項目將與最終產品項目相同，並且在開發過程中進行修訂。如果原型是通過與最終生產中使用的相同方法實現的，則建議這樣做。這種方法的一個例子是，如果產品足夠簡單，可以將產品和生產方面的開發一起進行。
第二種是將原型視為與最終產品分開的項目 - 這是本次模擬中採用的路徑。做出此決定的主要原因是我們的原型生產方式與最終生產方式不同，因為原型使用了 3D 打印。
從頭開始，創建了一個名為 PROTO Alpha Case 的產品項目（圖 37）（Alpha Case 是產品的名稱）。從現在開始，我們將原型產品稱為“原型項目”。正如我們所看到的，這允許對原型項目進行很好的表示。由於它是一個原型，因此它不會被標記為可以出售或購買的東西，並且銷售價格將設置為 0 美元，因為它並不重要。這個原型項目將用於連接其開發的不同方面，但目前它被擱置一旁。
圖 37 原型產品項目的圖片
正如我們在第 3 章中之前所確立的，該產品將由 3 個零件組成：Part A、Part B 和 Part C。這些需要製作原型並創建為產品，以便可以將它們添加到 PROTO Alpha Case 的物料清單中。最後，決定使用特定的塑料長絲（見第 4.1.1 節）進行 PROTO Part A 和 PROTO Part B 和 C 的 3D 打印，並且這些也需要添加為產品（圖 38）。
圖 38 原型產品類項目的概述
在這個時候，Alpha Case 原型設計的相關產品項目已經完成，這使得創建其相關 BOM 成為可能。它們有 3 個，它們遵循（圖 39）中的結構：
圖 39 原型設計的 BOM 圖
值得一提的是，Odoo 在項目中使用了套件選項（圖 40）來推斷該產品是另一個產品的組件。這非常有趣，因為它會自動在產品項目之間創建依賴關係以進行生產。
圖 40 原型產品 BOM（Part-A）的圖片
正如讀者可以看到的（圖 41），在製作 BOM 時，可以簡單地創建製造過程所需的特定操作項目並指定其工作中心。Odoo 中關於 MES 的最佳功能之一是能夠根據默認持續時間跟踪操作時間。這可以根據跟踪時間動態更改或手動設置。我們也可以在操作項目中添加操作說明文件。即使它僅限於 PDF 文本或指向 Google 幻燈片文件的鏈接，這也是 Odoo 為直接連接到項目的文件管理提供的少數機會之一。
圖 41 Odoo 呈現的操作項目的圖片（BOM Part-A）
圖 42 為原型設計創建的 BOM 概述
說到這種缺乏上傳機會的情況，我們可以注意到，在製作產品項目時，無法將有關產品的文件直接上傳到該項目。在我們的例子中，我們有關於我們正在製作原型的零件的 CAD 文件，無法以任何方式上傳這些文件將是 PLM 方面的徹底失敗。謝天謝地，有一個解決方法。如第 5.1.3.5 節所述，ECO 是一個鏈接到產品項目或 BOM 的項目，並允許將上傳的文件附加到它。這是一個小的解決方法，但基本上意味著如果我們想以任何有意義的方式將我們的 CAD 文件上傳到項目中，我們需要發出 ECO，即使沒有進行任何“更改”。
圖 43 ECO 示例
只能假設這是 Odoo 團隊在其 ERP 基礎中實施 PLM 策略的一部分。這是合理的，但它仍然是這個軟件界面中為數不多的不那麼簡單的方面之一。這是一個非常有價值的功能，但它有點隱藏。文檔圖標僅在創建和保存 ECO 後才會出現在右上角（圖 43）。
圖 44 附加到 ECO 的文件的概述
由於 Odoo 和 CAD 軟件之間沒有直接集成，因此上傳文件不會對產品元數據造成任何自動更改。從 PLM 的角度來看，這並不理想，但它仍然是一個實現良好的功能。通過允許產品項目不僅直接鏈接到一個現有的 ECO，而且鏈接到應用於該項目
重點整理:
Odoo 原型設計階段的優缺點
優點:
直觀的產品和 BOM 創建: Odoo 提供簡單易用的界面，可以輕鬆创建产品和 BOM，并进行管理。
BOM 與產品整合完善: BOM 和產品項目之間的整合非常緊密，修改 BOM 會直接影響產品，並自動更新相關信息。
版本控制功能: ECO 能夠有效追蹤產品和 BOM 的版本变更，方便查阅历史修改记录。
缺點：
文件管理功能不足：許多專案類型無法直接上傳文件，需要依賴ECO來變通實現，這在管理CAD文件等方面並不方便。
操作順序問題：Odoo V14 取消了「路線」功能，導致 BOM 中操作順序混亂，需要手動調整或依賴操作員的經驗。
產品與工具的差異不明確：Odoo 將模具視為產品，但無法將其與設備關聯，導致在模具開發和維護方面存在資訊斷層。
數據分析功能有限：數據分析主要集中在生產訂單的完成時間，缺乏針對品質控制等方面的數據分析和視覺化展示。
Odoo適合哪些公司使用PLM和MES功能？
小型企業：規模縮小，對PLM和MES的需求相對簡單的公司。
以組成或主要的企業：可以充分利用Odoo的ERP功能及其與PLM、MES的整合。
總結來說，Odoo 的 PLM 和 MES 功能具有一定的可用性，但流程增加了改進空間。功能齊全的公司，可能需要考慮其他更專業的PLM 和MES 解決方案。&lt;/p&gt;
&lt;p&gt;學號,GitHub 帳號,組別,cd2024 倉儲,cd2024 網站,期中報告倉儲,期中報告網站
40923136,,, , , , 
40923140,4923140,6,https://github.com/4923140/cd2024, , , 
40923149,40923149r,6,https://github.com/40923149r/cd2024, , , 
40923150,40923150,6,https://github.com/40923150/cd2024, , , 
40923152,40923152,6,https://github.com/40923152/cd2024, , , 
40923157,40923157,4,https://github.com/40923157/cd2024, , , 
40971134,40971134,6,https://github.com/40971134/cd2024, , , 
40971140,,, , , , 
40971219,40971219,6,https://github.com/40971219/cd2024, , , 
40971220,40971220,6,https://github.com/40971220/cd2024, , , 
41023132,BX41023132,8,https://github.com/BX41023132/cd2024, , , 
41039138,GUJIAFENG,8,https://github.com/GUJIAFENG/cd2024, , , 
41123201,Peichen1128,4,https://github.com/Peichen1128/cd2024, , , 
41123202,Yunjia822,5,https://github.com/Yunjia822/cd2024, , , 
41123203,S1u2a3n4,5,https://github.com/S1u2a3n4/cd2024, , , 
41123204,"warsplte
",1,https://github.com/warsplte/cd2024, , , 
41123205,"41123205WANG-ZE-XIANG
",7,https://github.com/41123205WANG-ZE-XIANG/cd2024, , , 
41123206,kaoruSam,,https://github.com/kaoruSam/cd2024, , , 
41123207,41123207Andy,4,https://github.com/41123207Andy/cd2024, , , 
41123208,jas41123208,1,https://github.com/jas41123208/cd2024, , , 
41123209,ds21137441,4,https://github.com/ds21137441/cd2024, , , 
41123210,Liu16552,2,https://github.com/Liu16552/cd2024, , , 
41123211,leekuchu006,1,https://github.com/leekuchu006/cd2024, , , 
41123212,41123212,3,https://github.com/41123212/cd2024, , , 
41123213,Njniaaaa,5,https://github.com/Njniaaaa/cd2024, , , 
41123214,41123214,2,https://github.com/41123214/cd2024, , , 
41123215,YanNingxue,4,https://github.com/YanNingxue/cd2024, , , 
41123216,S41123216,1,https://github.com/S41123216/cd2024, , , 
41123217,12tony25,1,https://github.com/12tony25/cd2024, , , 
41123218,Cheennggg,1,https://github.com/Cheennggg/cd2024, , , 
41123219,asd1234554321,1,https://github.com/asd1234554321/cd2024, , , 
41123220,Changyou41123220,5,https://github.com/Changyou41123220/cd2024, , , 
41123221,WENG-WEI-JUN,7,https://github.com/WENG-WEI-JUN/cd2024, , , 
41123222,kao41123222,5,https://github.com/kao41123222/cd2024, , , 
41123223,CHI-23,5,https://github.com/CHI-23/cd2024, , , 
41123224,morant-4125252,2,https://github.com/morant-4125252/cd2024, , , 
41123226,41123226,9,https://github.com/41123226/cd2024, , , 
41123227,tianmiaox,3,https://github.com/tianmiaox/cd2024, , , 
41123229,Zkamsmsmdmdm,9,https://github.com/Zkamsmsmdmdm/cd2024, , , 
41123230,41123230GUANSEN,7,https://github.com/41123230GUANSEN/cd2024, , , 
41123231,YanhanChenn,2,https://github.com/YanhanChenn/cd2024, , , 
41123232,41123232,3,https://github.com/41123232/cd2024, , , 
41123233,zeng-wei-zhi,7,https://github.com/zeng-wei-zhi/cd2024, , , 
41123234,41123234,4,https://github.com/41123234/cd2024, , , 
41123235,41123235,2,https://github.com/41123235/cd2024, , , 
41123236,41123236,3,https://github.com/41123236/cd2024, , , 
41123237,41123237-Hank,3,https://github.com/41123237-Hank/cd2024, , , 
41123238,41123238,3,https://github.com/41123238/cd2024, , , 
41123239,41123239yang,2,https://github.com/41123239yang/cd2024, , , 
41123240,41123240,2,https://github.com/41123240/cd2024, , , 
41123241,41123241,9,https://github.com/41123241/cd2024, , , 
41123243,a0408258,9,https://github.com/a0408258/cd2024, , , 
41123244,halo2356141,7,https://github.com/halo2356141/cd2024, , , 
41123245,Xuxia1118,7,https://github.com/Xuxia1118/cd2024, , , 
41123246,,, , , , 
41123247,tsai1201,7,https://github.com/tsai1201/cd2024, , , 
41123248,BA930420,7,https://github.com/BA930420/cd2024, , , 
41123249,41123249,9,https://github.com/41123249/cd2024, , , 
41123250,41123250,9,https://github.com/41123250/cd2024, , , 
41123251,41123251,9,https://github.com/41123251/cd2024, , , 
41132222,41132222,2,https://github.com/41132222/cd2024, , , 
41136103,41136103,1,https://github.com/41136103/cd2024, , , 
41136124,41136124,5,https://github.com/41136124/cd2024, , , 
41136126,,, , , , 
41136131,41136131,4,https://github.com/41136131/cd2024, , , &lt;/p&gt;</content><category term="w9"></category><category term="網誌編寫"></category></entry><entry><title>第七週日誌</title><link href="./2024-Spring-w7-blog-tutorial.html" rel="alternate"></link><published>2024-04-04T00:00:00+08:00</published><updated>2024-04-19T06:59:44+08:00</updated><author><name>40923131</name></author><id>tag:None,2024-04-04:./2024-Spring-w7-blog-tutorial.html</id><summary type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;


&lt;h1&gt;W8&lt;/h1&gt;</content><category term="w7"></category><category term="網誌編寫"></category></entry><entry><title>第七週日誌</title><link href="./2024-Spring-w7-blog-tutorial.html" rel="alternate"></link><published>2024-04-04T00:00:00+08:00</published><updated>2024-04-12T07:02:15+08:00</updated><author><name>40923131</name></author><id>tag:None,2024-04-04:./2024-Spring-w7-blog-tutorial.html</id><summary type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;


&lt;h1&gt;W7&lt;/h1&gt;
&lt;p&gt;清明連假沒有上課&lt;/p&gt;</content><category term="w7"></category><category term="網誌編寫"></category></entry><entry><title>第七週日誌</title><link href="./2024-Spring-w7-blog-tutorial.html" rel="alternate"></link><published>2024-04-04T00:00:00+08:00</published><updated>2024-04-12T07:02:15+08:00</updated><author><name>40923131</name></author><id>tag:None,2024-04-04:./2024-Spring-w7-blog-tutorial.html</id><summary type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;


&lt;h1&gt;W7&lt;/h1&gt;
&lt;p&gt;清明連假沒有上課&lt;/p&gt;</content><category term="w7"></category><category term="網誌編寫"></category></entry><entry><title>第七週日誌</title><link href="./2024-Spring-w7-blog-tutorial.html" rel="alternate"></link><published>2024-04-04T00:00:00+08:00</published><updated>2024-04-19T06:59:44+08:00</updated><author><name>40923131</name></author><id>tag:None,2024-04-04:./2024-Spring-w7-blog-tutorial.html</id><summary type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;


&lt;h1&gt;W8&lt;/h1&gt;</content><category term="w7"></category><category term="網誌編寫"></category></entry><entry><title>第六週日誌</title><link href="./2024-Spring-w6-blog-tutorial.html" rel="alternate"></link><published>2024-03-29T00:00:00+08:00</published><updated>2024-04-12T07:02:08+08:00</updated><author><name>40923131</name></author><id>tag:None,2024-03-29:./2024-Spring-w6-blog-tutorial.html</id><summary type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;


&lt;h1&gt;W6&lt;/h1&gt;</content><category term="w6"></category><category term="網誌編寫"></category></entry><entry><title>第五週日誌</title><link href="./2024-Spring-w5-blog-tutorial.html" rel="alternate"></link><published>2024-03-22T00:00:00+08:00</published><updated>2024-04-12T07:01:58+08:00</updated><author><name>40923131</name></author><id>tag:None,2024-03-22:./2024-Spring-w5-blog-tutorial.html</id><summary type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;


&lt;h1&gt;W5&lt;/h1&gt;
&lt;p&gt;解決了上週無法git push的問題,並將影片連接貼至網站.&lt;/p&gt;
&lt;p&gt;解決方法: 因為最開始commit了附有影片的內容,導致後面所有提交都無法成功並堆積在近端. 
後來使用git reset HEAD~1把之前不需要的提交都刪除&lt;/p&gt;</content><category term="w5"></category><category term="網誌編寫"></category></entry><entry><title>第四週日誌</title><link href="./2024-Spring-w4-blog-tutorial.html" rel="alternate"></link><published>2024-03-15T00:00:00+08:00</published><updated>2024-04-12T07:01:50+08:00</updated><author><name>40923131</name></author><id>tag:None,2024-03-15:./2024-Spring-w4-blog-tutorial.html</id><summary type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;


&lt;h1&gt;W4&lt;/h1&gt;
&lt;p&gt;上傳本週新增影片字幕的任務,但目前無法成功git push.&lt;/p&gt;
&lt;p&gt;問題點: 不能將影片直接放在download下,會因影片檔案太大導致無法上傳
解決方法:將影片先上傳至YouTube再將連結放到網站&lt;/p&gt;</content><category term="w4"></category><category term="網誌編寫"></category></entry><entry><title>第三週日誌</title><link href="./2024-Spring-w3-blog-tutorial.html" rel="alternate"></link><published>2024-03-08T00:00:00+08:00</published><updated>2024-04-12T07:01:42+08:00</updated><author><name>40923131</name></author><id>tag:None,2024-03-08:./2024-Spring-w3-blog-tutorial.html</id><summary type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;


&lt;h1&gt;W3&lt;/h1&gt;
&lt;p&gt;將個人倉儲納入分組倉儲成為子模組&lt;/p&gt;</content><category term="w3"></category><category term="網誌編寫"></category></entry><entry><title>第二週日誌</title><link href="./2024-Spring-w2-blog-tutorial.html" rel="alternate"></link><published>2024-03-01T00:00:00+08:00</published><updated>2024-04-12T07:02:24+08:00</updated><author><name>40923131</name></author><id>tag:None,2024-03-01:./2024-Spring-w2-blog-tutorial.html</id><summary type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;


&lt;h1&gt;W2&lt;/h1&gt;
&lt;p&gt;新建個人倉儲&lt;/p&gt;</content><category term="w2"></category><category term="網誌編寫"></category></entry><entry><title>第一週日誌</title><link href="./2024-Spring-w1-blog-tutorial.html" rel="alternate"></link><published>2024-02-23T00:00:00+08:00</published><updated>2024-04-12T07:01:19+08:00</updated><author><name>40923131</name></author><id>tag:None,2024-02-23:./2024-Spring-w1-blog-tutorial.html</id><summary type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;紀錄本學期的每週進度&lt;/p&gt;


&lt;h1&gt;W1&lt;/h1&gt;</content><category term="w1"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-spring-ke-cheng.html" rel="alternate"></link><published>2024-02-18T11:00:00+08:00</published><updated>2024-04-12T06:53:42+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-18:./2024-spring-ke-cheng.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w1"></category><category term="網誌編寫"></category></entry></feed>